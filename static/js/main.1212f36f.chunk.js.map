{"version":3,"sources":["logo.svg","gl/DDSLoader.js","gl/MTLLoader.js","gl/OBJLoader.js","Background.js","App.js","reportWebVitals.js","index.js"],"names":["DDSLoader","manager","CompressedTextureLoader","call","this","prototype","Object","assign","create","constructor","parse","buffer","loadMipmaps","dds","mipmaps","width","height","format","mipmapCount","fourCCToInt32","value","charCodeAt","loadARGBMip","dataOffset","dataLength","srcBuffer","Uint8Array","byteArray","dst","src","y","x","b","g","r","a","blockBytes","FOURCC_DXT1","FOURCC_DXT3","FOURCC_DXT5","FOURCC_ETC1","header","Int32Array","console","error","fourCC","isRGBAUncompressed","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_ETC1_Format","String","fromCharCode","RGBAFormat","Math","max","caps2","isCubemap","faces","face","i","length","mipmap","push","MTLLoader","Loader","load","url","onLoad","onProgress","onError","scope","path","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","e","itemError","setMaterialOptions","materialOptions","lines","split","info","delimiter_pattern","materialsInfo","line","trim","charAt","pos","indexOf","key","substring","toLowerCase","name","ss","parseFloat","materialCreator","MaterialCreator","resourcePath","setCrossOrigin","crossOrigin","setManager","setMaterials","baseUrl","options","materials","materialsArray","nameLookup","side","FrontSide","wrap","RepeatWrapping","convert","converted","mn","mat","covmat","prop","save","lprop","normalizeRGB","ignoreZeroRGBs","preload","getIndex","materialName","getAsArray","index","undefined","createMaterial_","params","setMapForType","mapType","texParams","getTextureParams","map","loadTexture","test","repeat","copy","scale","offset","wrapS","wrapT","n","color","Color","fromArray","specular","emissive","transparent","shininess","opacity","invertTrProperty","MeshPhongMaterial","matParams","Vector2","items","bumpScale","splice","set","join","mapping","texture","DefaultLoadingManager","getHandler","TextureLoader","OBJLoader","object_pattern","material_library_pattern","material_use_pattern","map_use_pattern","vA","Vector3","vB","vC","ab","cb","ParserState","state","objects","object","vertices","normals","colors","uvs","materialLibraries","startObject","fromDeclaration","previousMaterial","currentMaterial","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","material","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","c","addVertexPoint","addVertexLine","addNormal","addFaceNormal","subVectors","cross","normalize","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","replace","lineFirstChar","result","trimLeft","data","vertexData","substr","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","lineVertices","lineUVs","li","llen","parts","pointData","exec","warn","container","Group","concat","isLine","isPoints","hasVertexColors","buffergeometry","BufferGeometry","setAttribute","Float32BufferAttribute","mesh","createdMaterials","miLen","materialHash","sourceMaterial","LineBasicMaterial","PointsMaterial","materialPoints","size","sizeAttenuation","Material","materialLine","flatShading","vertexColors","addGroup","LineSegments","Points","Mesh","add","points","Background","element","React","useRef","camera","renderer","scrollPosition","onWindowResize","current","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","setSize","listenToScroll","position","pageYOffset","useEffect","addEventListener","passive","scene","THREE","alpha","appendChild","domElement","ambientLight","pointLight","animate","requestAnimationFrame","rotation","ratio","document","body","scrollWidth","scrollHeight","render","xhr","lengthComputable","percentComplete","loaded","total","log","round","addHandler","obj","removeEventListener","className","id","ref","App","target","href","frameborder","allowtransparency","allow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1212f36f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {\n\tCompressedTextureLoader,\n\tRGBAFormat,\n\tRGBA_S3TC_DXT3_Format,\n\tRGBA_S3TC_DXT5_Format,\n\tRGB_ETC1_Format,\n\tRGB_S3TC_DXT1_Format\n} from 'three'; //from '../../../build/three.module.js';\n\nvar DDSLoader = function ( manager ) {\n\n\tCompressedTextureLoader.call( this, manager );\n\n};\n\nDDSLoader.prototype = Object.assign( Object.create( CompressedTextureLoader.prototype ), {\n\n\tconstructor: DDSLoader,\n\n\tparse: function ( buffer, loadMipmaps ) {\n\n\t\tvar dds = { mipmaps: [], width: 0, height: 0, format: null, mipmapCount: 1 };\n\n\t\t// Adapted from @toji's DDS utils\n\t\t// https://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js\n\n\t\t// All values and structures referenced from:\n\t\t// http://msdn.microsoft.com/en-us/library/bb943991.aspx/\n\n\t\tvar DDS_MAGIC = 0x20534444;\n\n\t\t// var DDSD_CAPS = 0x1;\n\t\t// var DDSD_HEIGHT = 0x2;\n\t\t// var DDSD_WIDTH = 0x4;\n\t\t// var DDSD_PITCH = 0x8;\n\t\t// var DDSD_PIXELFORMAT = 0x1000;\n\t\tvar DDSD_MIPMAPCOUNT = 0x20000;\n\t\t// var DDSD_LINEARSIZE = 0x80000;\n\t\t// var DDSD_DEPTH = 0x800000;\n\n\t\t// var DDSCAPS_COMPLEX = 0x8;\n\t\t// var DDSCAPS_MIPMAP = 0x400000;\n\t\t// var DDSCAPS_TEXTURE = 0x1000;\n\n\t\tvar DDSCAPS2_CUBEMAP = 0x200;\n\t\tvar DDSCAPS2_CUBEMAP_POSITIVEX = 0x400;\n\t\tvar DDSCAPS2_CUBEMAP_NEGATIVEX = 0x800;\n\t\tvar DDSCAPS2_CUBEMAP_POSITIVEY = 0x1000;\n\t\tvar DDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000;\n\t\tvar DDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000;\n\t\tvar DDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000;\n\t\t// var DDSCAPS2_VOLUME = 0x200000;\n\n\t\t// var DDPF_ALPHAPIXELS = 0x1;\n\t\t// var DDPF_ALPHA = 0x2;\n\t\tvar DDPF_FOURCC = 0x4;\n\t\t// var DDPF_RGB = 0x40;\n\t\t// var DDPF_YUV = 0x200;\n\t\t// var DDPF_LUMINANCE = 0x20000;\n\n\t\tfunction fourCCToInt32( value ) {\n\n\t\t\treturn value.charCodeAt( 0 ) +\n\t\t\t\t( value.charCodeAt( 1 ) << 8 ) +\n\t\t\t\t( value.charCodeAt( 2 ) << 16 ) +\n\t\t\t\t( value.charCodeAt( 3 ) << 24 );\n\n\t\t}\n\n\t\tfunction int32ToFourCC( value ) {\n\n\t\t\treturn String.fromCharCode(\n\t\t\t\tvalue & 0xff,\n\t\t\t\t( value >> 8 ) & 0xff,\n\t\t\t\t( value >> 16 ) & 0xff,\n\t\t\t\t( value >> 24 ) & 0xff\n\t\t\t);\n\n\t\t}\n\n\t\tfunction loadARGBMip( buffer, dataOffset, width, height ) {\n\n\t\t\tvar dataLength = width * height * 4;\n\t\t\tvar srcBuffer = new Uint8Array( buffer, dataOffset, dataLength );\n\t\t\tvar byteArray = new Uint8Array( dataLength );\n\t\t\tvar dst = 0;\n\t\t\tvar src = 0;\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\n\n\t\t\t\tfor ( var x = 0; x < width; x ++ ) {\n\n\t\t\t\t\tvar b = srcBuffer[ src ]; src ++;\n\t\t\t\t\tvar g = srcBuffer[ src ]; src ++;\n\t\t\t\t\tvar r = srcBuffer[ src ]; src ++;\n\t\t\t\t\tvar a = srcBuffer[ src ]; src ++;\n\t\t\t\t\tbyteArray[ dst ] = r; dst ++;\t//r\n\t\t\t\t\tbyteArray[ dst ] = g; dst ++;\t//g\n\t\t\t\t\tbyteArray[ dst ] = b; dst ++;\t//b\n\t\t\t\t\tbyteArray[ dst ] = a; dst ++;\t//a\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn byteArray;\n\n\t\t}\n\n\t\tvar FOURCC_DXT1 = fourCCToInt32( 'DXT1' );\n\t\tvar FOURCC_DXT3 = fourCCToInt32( 'DXT3' );\n\t\tvar FOURCC_DXT5 = fourCCToInt32( 'DXT5' );\n\t\tvar FOURCC_ETC1 = fourCCToInt32( 'ETC1' );\n\n\t\tvar headerLengthInt = 31; // The header length in 32 bit ints\n\n\t\t// Offsets into the header array\n\n\t\tvar off_magic = 0;\n\n\t\tvar off_size = 1;\n\t\tvar off_flags = 2;\n\t\tvar off_height = 3;\n\t\tvar off_width = 4;\n\n\t\tvar off_mipmapCount = 7;\n\n\t\tvar off_pfFlags = 20;\n\t\tvar off_pfFourCC = 21;\n\t\tvar off_RGBBitCount = 22;\n\t\tvar off_RBitMask = 23;\n\t\tvar off_GBitMask = 24;\n\t\tvar off_BBitMask = 25;\n\t\tvar off_ABitMask = 26;\n\n\t\t// var off_caps = 27;\n\t\tvar off_caps2 = 28;\n\t\t// var off_caps3 = 29;\n\t\t// var off_caps4 = 30;\n\n\t\t// Parse header\n\n\t\tvar header = new Int32Array( buffer, 0, headerLengthInt );\n\n\t\tif ( header[ off_magic ] !== DDS_MAGIC ) {\n\n\t\t\tconsole.error( 'THREE.DDSLoader.parse: Invalid magic number in DDS header.' );\n\t\t\treturn dds;\n\n\t\t}\n\n\t\tif ( ! header[ off_pfFlags ] & DDPF_FOURCC ) {\n\n\t\t\tconsole.error( 'THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code.' );\n\t\t\treturn dds;\n\n\t\t}\n\n\t\tvar blockBytes;\n\n\t\tvar fourCC = header[ off_pfFourCC ];\n\n\t\tvar isRGBAUncompressed = false;\n\n\t\tswitch ( fourCC ) {\n\n\t\t\tcase FOURCC_DXT1:\n\n\t\t\t\tblockBytes = 8;\n\t\t\t\tdds.format = RGB_S3TC_DXT1_Format;\n\t\t\t\tbreak;\n\n\t\t\tcase FOURCC_DXT3:\n\n\t\t\t\tblockBytes = 16;\n\t\t\t\tdds.format = RGBA_S3TC_DXT3_Format;\n\t\t\t\tbreak;\n\n\t\t\tcase FOURCC_DXT5:\n\n\t\t\t\tblockBytes = 16;\n\t\t\t\tdds.format = RGBA_S3TC_DXT5_Format;\n\t\t\t\tbreak;\n\n\t\t\tcase FOURCC_ETC1:\n\n\t\t\t\tblockBytes = 8;\n\t\t\t\tdds.format = RGB_ETC1_Format;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tif ( header[ off_RGBBitCount ] === 32\n\t\t\t\t\t&& header[ off_RBitMask ] & 0xff0000\n\t\t\t\t\t&& header[ off_GBitMask ] & 0xff00\n\t\t\t\t\t&& header[ off_BBitMask ] & 0xff\n\t\t\t\t\t&& header[ off_ABitMask ] & 0xff000000 ) {\n\n\t\t\t\t\tisRGBAUncompressed = true;\n\t\t\t\t\tblockBytes = 64;\n\t\t\t\t\tdds.format = RGBAFormat;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.DDSLoader.parse: Unsupported FourCC code ', int32ToFourCC( fourCC ) );\n\t\t\t\t\treturn dds;\n\n\t\t\t\t}\n\n\t\t}\n\n\t\tdds.mipmapCount = 1;\n\n\t\tif ( header[ off_flags ] & DDSD_MIPMAPCOUNT && loadMipmaps !== false ) {\n\n\t\t\tdds.mipmapCount = Math.max( 1, header[ off_mipmapCount ] );\n\n\t\t}\n\n\t\tvar caps2 = header[ off_caps2 ];\n\t\tdds.isCubemap = caps2 & DDSCAPS2_CUBEMAP ? true : false;\n\t\tif ( dds.isCubemap && (\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEX ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEX ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEY ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEY ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEZ ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEZ )\n\t\t) ) {\n\n\t\t\tconsole.error( 'THREE.DDSLoader.parse: Incomplete cubemap faces' );\n\t\t\treturn dds;\n\n\t\t}\n\n\t\tdds.width = header[ off_width ];\n\t\tdds.height = header[ off_height ];\n\n\t\tvar dataOffset = header[ off_size ] + 4;\n\n\t\t// Extract mipmaps buffers\n\n\t\tvar faces = dds.isCubemap ? 6 : 1;\n\n\t\tfor ( var face = 0; face < faces; face ++ ) {\n\n\t\t\tvar width = dds.width;\n\t\t\tvar height = dds.height;\n\n\t\t\tfor ( var i = 0; i < dds.mipmapCount; i ++ ) {\n\n\t\t\t\tif ( isRGBAUncompressed ) {\n\n\t\t\t\t\tvar byteArray = loadARGBMip( buffer, dataOffset, width, height );\n\t\t\t\t\tvar dataLength = byteArray.length;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar dataLength = Math.max( 4, width ) / 4 * Math.max( 4, height ) / 4 * blockBytes;\n\t\t\t\t\tvar byteArray = new Uint8Array( buffer, dataOffset, dataLength );\n\n\t\t\t\t}\n\n\t\t\t\tvar mipmap = { 'data': byteArray, 'width': width, 'height': height };\n\t\t\t\tdds.mipmaps.push( mipmap );\n\n\t\t\t\tdataOffset += dataLength;\n\n\t\t\t\twidth = Math.max( width >> 1, 1 );\n\t\t\t\theight = Math.max( height >> 1, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn dds;\n\n\t}\n\n} );\n\nexport { DDSLoader };\n","import {\n\tColor,\n\tDefaultLoadingManager,\n\tFileLoader,\n\tFrontSide,\n\tLoader,\n\tLoaderUtils,\n\tMeshPhongMaterial,\n\tRepeatWrapping,\n\tTextureLoader,\n\tVector2\n} from 'three';\n\n/**\n * Loads a Wavefront .mtl file specifying materials\n */\n\nvar MTLLoader = function ( manager ) {\n\n\tLoader.call( this, manager );\n\n};\n\nMTLLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: MTLLoader,\n\n\t/**\n\t * Loads and parses a MTL asset from a URL.\n\t *\n\t * @param {String} url - URL to the MTL file.\n\t * @param {Function} [onLoad] - Callback invoked with the loaded object.\n\t * @param {Function} [onProgress] - Callback for download progress.\n\t * @param {Function} [onError] - Callback for download errors.\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to load.\n\t */\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetMaterialOptions: function ( value ) {\n\n\t\tthis.materialOptions = value;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Parses a MTL file.\n\t *\n\t * @param {String} text - Content of MTL file\n\t * @return {MTLLoader.MaterialCreator}\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to parse.\n\t */\n\tparse: function ( text, path ) {\n\n\t\tvar lines = text.split( '\\n' );\n\t\tvar info = {};\n\t\tvar delimiter_pattern = /\\s+/;\n\t\tvar materialsInfo = {};\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tvar line = lines[ i ];\n\t\t\tline = line.trim();\n\n\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\n\n\t\t\t\t// Blank line or comment ignore\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar pos = line.indexOf( ' ' );\n\n\t\t\tvar key = ( pos >= 0 ) ? line.substring( 0, pos ) : line;\n\t\t\tkey = key.toLowerCase();\n\n\t\t\tvar value = ( pos >= 0 ) ? line.substring( pos + 1 ) : '';\n\t\t\tvalue = value.trim();\n\n\t\t\tif ( key === 'newmtl' ) {\n\n\t\t\t\t// New material\n\n\t\t\t\tinfo = { name: value };\n\t\t\t\tmaterialsInfo[ value ] = info;\n\n\t\t\t} else {\n\n\t\t\t\tif ( key === 'ka' || key === 'kd' || key === 'ks' || key === 'ke' ) {\n\n\t\t\t\t\tvar ss = value.split( delimiter_pattern, 3 );\n\t\t\t\t\tinfo[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinfo[ key ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar materialCreator = new MTLLoader.MaterialCreator( this.resourcePath || path, this.materialOptions );\n\t\tmaterialCreator.setCrossOrigin( this.crossOrigin );\n\t\tmaterialCreator.setManager( this.manager );\n\t\tmaterialCreator.setMaterials( materialsInfo );\n\t\treturn materialCreator;\n\n\t}\n\n} );\n\n/**\n * Create a new MTLLoader.MaterialCreator\n * @param baseUrl - Url relative to which textures are loaded\n * @param options - Set of options on how to construct the materials\n *                  side: Which side to apply the material\n *                        FrontSide (default), THREE.BackSide, THREE.DoubleSide\n *                  wrap: What type of wrapping to apply for textures\n *                        RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n *                                Default: false, assumed to be already normalized\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n *                                  Default: false\n * @constructor\n */\n\nMTLLoader.MaterialCreator = function ( baseUrl, options ) {\n\n\tthis.baseUrl = baseUrl || '';\n\tthis.options = options;\n\tthis.materialsInfo = {};\n\tthis.materials = {};\n\tthis.materialsArray = [];\n\tthis.nameLookup = {};\n\n\tthis.side = ( this.options && this.options.side ) ? this.options.side : FrontSide;\n\tthis.wrap = ( this.options && this.options.wrap ) ? this.options.wrap : RepeatWrapping;\n\n};\n\nMTLLoader.MaterialCreator.prototype = {\n\n\tconstructor: MTLLoader.MaterialCreator,\n\n\tcrossOrigin: 'anonymous',\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetManager: function ( value ) {\n\n\t\tthis.manager = value;\n\n\t},\n\n\tsetMaterials: function ( materialsInfo ) {\n\n\t\tthis.materialsInfo = this.convert( materialsInfo );\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\n\t},\n\n\tconvert: function ( materialsInfo ) {\n\n\t\tif ( ! this.options ) return materialsInfo;\n\n\t\tvar converted = {};\n\n\t\tfor ( var mn in materialsInfo ) {\n\n\t\t\t// Convert materials info into normalized form based on options\n\n\t\t\tvar mat = materialsInfo[ mn ];\n\n\t\t\tvar covmat = {};\n\n\t\t\tconverted[ mn ] = covmat;\n\n\t\t\tfor ( var prop in mat ) {\n\n\t\t\t\tvar save = true;\n\t\t\t\tvar value = mat[ prop ];\n\t\t\t\tvar lprop = prop.toLowerCase();\n\n\t\t\t\tswitch ( lprop ) {\n\n\t\t\t\t\tcase 'kd':\n\t\t\t\t\tcase 'ka':\n\t\t\t\t\tcase 'ks':\n\n\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\t\tif ( this.options && this.options.normalizeRGB ) {\n\n\t\t\t\t\t\t\tvalue = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.options && this.options.ignoreZeroRGBs ) {\n\n\t\t\t\t\t\t\tif ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 2 ] === 0 ) {\n\n\t\t\t\t\t\t\t\t// ignore\n\n\t\t\t\t\t\t\t\tsave = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( save ) {\n\n\t\t\t\t\tcovmat[ lprop ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn converted;\n\n\t},\n\n\tpreload: function () {\n\n\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\tthis.create( mn );\n\n\t\t}\n\n\t},\n\n\tgetIndex: function ( materialName ) {\n\n\t\treturn this.nameLookup[ materialName ];\n\n\t},\n\n\tgetAsArray: function () {\n\n\t\tvar index = 0;\n\n\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\tthis.materialsArray[ index ] = this.create( mn );\n\t\t\tthis.nameLookup[ mn ] = index;\n\t\t\tindex ++;\n\n\t\t}\n\n\t\treturn this.materialsArray;\n\n\t},\n\n\tcreate: function ( materialName ) {\n\n\t\tif ( this.materials[ materialName ] === undefined ) {\n\n\t\t\tthis.createMaterial_( materialName );\n\n\t\t}\n\n\t\treturn this.materials[ materialName ];\n\n\t},\n\n\tcreateMaterial_: function ( materialName ) {\n\n\t\t// Create material\n\n\t\tvar scope = this;\n\t\tvar mat = this.materialsInfo[ materialName ];\n\t\tvar params = {\n\n\t\t\tname: materialName,\n\t\t\tside: this.side\n\n\t\t};\n\n\t\tfunction resolveURL( baseUrl, url ) {\n\n\t\t\tif ( typeof url !== 'string' || url === '' )\n\t\t\t\treturn '';\n\n\t\t\t// Absolute URL\n\t\t\tif ( /^https?:\\/\\//i.test( url ) ) return url;\n\n\t\t\treturn baseUrl + url;\n\n\t\t}\n\n\t\tfunction setMapForType( mapType, value ) {\n\n\t\t\tif ( params[ mapType ] ) return; // Keep the first encountered texture\n\n\t\t\tvar texParams = scope.getTextureParams( value, params );\n\t\t\tvar map = scope.loadTexture( resolveURL( scope.baseUrl, texParams.url ) );\n\n\t\t\tmap.repeat.copy( texParams.scale );\n\t\t\tmap.offset.copy( texParams.offset );\n\n\t\t\tmap.wrapS = scope.wrap;\n\t\t\tmap.wrapT = scope.wrap;\n\n\t\t\tparams[ mapType ] = map;\n\n\t\t}\n\n\t\tfor ( var prop in mat ) {\n\n\t\t\tvar value = mat[ prop ];\n\t\t\tvar n;\n\n\t\t\tif ( value === '' ) continue;\n\n\t\t\tswitch ( prop.toLowerCase() ) {\n\n\t\t\t\t// Ns is material specular exponent\n\n\t\t\t\tcase 'kd':\n\n\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\tparams.color = new Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ks':\n\n\t\t\t\t\t// Specular color (color when light is reflected from shiny surface) using RGB values\n\t\t\t\t\tparams.specular = new Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ke':\n\n\t\t\t\t\t// Emissive using RGB values\n\t\t\t\t\tparams.emissive = new Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_kd':\n\n\t\t\t\t\t// Diffuse texture map\n\n\t\t\t\t\tsetMapForType( 'map', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ks':\n\n\t\t\t\t\t// Specular map\n\n\t\t\t\t\tsetMapForType( 'specularMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ke':\n\n\t\t\t\t\t// Emissive map\n\n\t\t\t\t\tsetMapForType( 'emissiveMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'norm':\n\n\t\t\t\t\tsetMapForType( 'normalMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_bump':\n\t\t\t\tcase 'bump':\n\n\t\t\t\t\t// Bump texture map\n\n\t\t\t\t\tsetMapForType( 'bumpMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_d':\n\n\t\t\t\t\t// Alpha map\n\n\t\t\t\t\tsetMapForType( 'alphaMap', value );\n\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ns':\n\n\t\t\t\t\t// The specular exponent (defines the focus of the specular highlight)\n\t\t\t\t\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\n\t\t\t\t\tparams.shininess = parseFloat( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'd':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( n < 1 ) {\n\n\t\t\t\t\t\tparams.opacity = n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tr':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( this.options && this.options.invertTrProperty ) n = 1 - n;\n\n\t\t\t\t\tif ( n > 0 ) {\n\n\t\t\t\t\t\tparams.opacity = 1 - n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.materials[ materialName ] = new MeshPhongMaterial( params );\n\t\treturn this.materials[ materialName ];\n\n\t},\n\n\tgetTextureParams: function ( value, matParams ) {\n\n\t\tvar texParams = {\n\n\t\t\tscale: new Vector2( 1, 1 ),\n\t\t\toffset: new Vector2( 0, 0 )\n\n\t\t };\n\n\t\tvar items = value.split( /\\s+/ );\n\t\tvar pos;\n\n\t\tpos = items.indexOf( '-bm' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\tmatParams.bumpScale = parseFloat( items[ pos + 1 ] );\n\t\t\titems.splice( pos, 2 );\n\n\t\t}\n\n\t\tpos = items.indexOf( '-s' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.scale.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\tpos = items.indexOf( '-o' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.offset.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\ttexParams.url = items.join( ' ' ).trim();\n\t\treturn texParams;\n\n\t},\n\n\tloadTexture: function ( url, mapping, onLoad, onProgress, onError ) {\n\n\t\tvar texture;\n\t\tvar manager = ( this.manager !== undefined ) ? this.manager : DefaultLoadingManager;\n\t\tvar loader = manager.getHandler( url );\n\n\t\tif ( loader === null ) {\n\n\t\t\tloader = new TextureLoader( manager );\n\n\t\t}\n\n\t\tif ( loader.setCrossOrigin ) loader.setCrossOrigin( this.crossOrigin );\n\t\ttexture = loader.load( url, onLoad, onProgress, onError );\n\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t}\n\n};\n\nexport { MTLLoader };\n","import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3\n} from 'three';\n\nvar OBJLoader = ( function () {\n\n\t// o object_name | g group_name\n\tvar object_pattern = /^[og]\\s*(.+)?/;\n\t// mtllib file_reference\n\tvar material_library_pattern = /^mtllib /;\n\t// usemtl material_name\n\tvar material_use_pattern = /^usemtl /;\n\t// usemap map_name\n\tvar map_use_pattern = /^usemap /;\n\n\tvar vA = new Vector3();\n\tvar vB = new Vector3();\n\tvar vC = new Vector3();\n\n\tvar ab = new Vector3();\n\tvar cb = new Vector3();\n\n\tfunction ParserState() {\n\n\t\tvar state = {\n\t\t\tobjects: [],\n\t\t\tobject: {},\n\n\t\t\tvertices: [],\n\t\t\tnormals: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\n\t\t\tmaterials: {},\n\t\t\tmaterialLibraries: [],\n\n\t\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\t\tthis.object.name = name;\n\t\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t\tthis.object = {\n\t\t\t\t\tname: name || '',\n\t\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\t\tgeometry: {\n\t\t\t\t\t\tvertices: [],\n\t\t\t\t\t\tnormals: [],\n\t\t\t\t\t\tcolors: [],\n\t\t\t\t\t\tuvs: [],\n\t\t\t\t\t\thasUVIndices: false\n\t\t\t\t\t},\n\t\t\t\t\tmaterials: [],\n\t\t\t\t\tsmooth: true,\n\n\t\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\t\tvar previous = this._finalize( false );\n\n\t\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = {\n\t\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\t\tvar cloned = {\n\t\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\t\treturn material;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn undefined;\n\n\t\t\t\t\t},\n\n\t\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\t\tvar lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\t\tfor ( var mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Inherit previous objects material.\n\t\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\t\tvar declared = previousMaterial.clone( 0 );\n\t\t\t\t\tdeclared.inherited = true;\n\t\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t\t}\n\n\t\t\t\tthis.objects.push( this.object );\n\n\t\t\t},\n\n\t\t\tfinalize: function () {\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t\t},\n\n\t\t\taddVertex: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexPoint: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexLine: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddNormal: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.normals;\n\t\t\t\tvar dst = this.object.geometry.normals;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.normals;\n\n\t\t\t\tvA.fromArray( src, a );\n\t\t\t\tvB.fromArray( src, b );\n\t\t\t\tvC.fromArray( src, c );\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tdst.push( cb.x, cb.y, cb.z );\n\t\t\t\tdst.push( cb.x, cb.y, cb.z );\n\t\t\t\tdst.push( cb.x, cb.y, cb.z );\n\n\t\t\t},\n\n\t\t\taddColor: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.colors;\n\t\t\t\tvar dst = this.object.geometry.colors;\n\n\t\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddUV: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t\t},\n\n\t\t\taddDefaultUV: function () {\n\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( 0, 0 );\n\t\t\t\tdst.push( 0, 0 );\n\t\t\t\tdst.push( 0, 0 );\n\n\t\t\t},\n\n\t\t\taddUVLine: function ( a ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t\t},\n\n\t\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tvar ia = this.parseVertexIndex( a, vLen );\n\t\t\t\tvar ib = this.parseVertexIndex( b, vLen );\n\t\t\t\tvar ic = this.parseVertexIndex( c, vLen );\n\n\t\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\t\tvar nLen = this.normals.length;\n\n\t\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\t// uvs\n\n\t\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\t\tvar uvLen = this.uvs.length;\n\n\t\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\t\tthis.addDefaultUV();\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tvar index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\t\tthis.addColor( index );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\t\t\t\tvar uvLen = this.uvs.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tstate.startObject( '', false );\n\n\t\treturn state;\n\n\t}\n\n\t//\n\n\tfunction OBJLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tOBJLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: OBJLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetMaterials: function ( materials ) {\n\n\t\t\tthis.materials = materials;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tvar state = new ParserState();\n\n\t\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t\t}\n\n\t\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t\t}\n\n\t\t\tvar lines = text.split( '\\n' );\n\t\t\tvar line = '', lineFirstChar = '';\n\t\t\tvar lineLength = 0;\n\t\t\tvar result = [];\n\n\t\t\t// Faster to just trim left side of the line. Use if available.\n\t\t\tvar trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\t\tfor ( var i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\t\tline = lines[ i ];\n\n\t\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\t\tlineLength = line.length;\n\n\t\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t\t// @todo invoke passed in handler if any\n\t\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\t\tvar data = line.split( /\\s+/ );\n\n\t\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\t\tcase 'v':\n\t\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar vertexData = lineData.split( /\\s+/ );\n\t\t\t\t\tvar faceVertices = [];\n\n\t\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\t\tfor ( var j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertexData[ j ];\n\n\t\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\t\tvar vertexParts = vertex.split( '/' );\n\t\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\t\tvar v1 = faceVertices[ 0 ];\n\n\t\t\t\t\tfor ( var j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar v2 = faceVertices[ j ];\n\t\t\t\t\t\tvar v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\t\tvar lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\t\tvar lineVertices = [], lineUVs = [];\n\n\t\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\t\tvar parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar pointData = lineData.split( ' ' );\n\n\t\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t\t} else if ( ( result = object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// o object_name\n\t\t\t\t\t// or\n\t\t\t\t\t// g group_name\n\n\t\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t\t// var name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\t\tvar name = ( ' ' + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\t\tstate.startObject( name );\n\n\t\t\t\t} else if ( material_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// material\n\n\t\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t\t} else if ( material_library_pattern.test( line ) ) {\n\n\t\t\t\t\t// mtl file\n\n\t\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t\t} else if ( map_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t\t// smooth shading\n\n\t\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\t\tvar value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar material = state.object.currentMaterial();\n\t\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Handle null terminated files without exception\n\t\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.finalize();\n\n\t\t\tvar container = new Group();\n\t\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\t\tvar hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\t\tif ( hasPrimitives === true ) {\n\n\t\t\t\tfor ( var i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar object = state.objects[ i ];\n\t\t\t\t\tvar geometry = object.geometry;\n\t\t\t\t\tvar materials = object.materials;\n\t\t\t\t\tvar isLine = ( geometry.type === 'Line' );\n\t\t\t\t\tvar isPoints = ( geometry.type === 'Points' );\n\t\t\t\t\tvar hasVertexColors = false;\n\n\t\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\t\tvar buffergeometry = new BufferGeometry();\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create materials\n\n\t\t\t\t\tvar createdMaterials = [];\n\n\t\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tvar materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\t\tvar material = state.materials[ materialHash ];\n\n\t\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\t\tvar materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\t\tvar materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create mesh\n\n\t\t\t\t\tvar mesh;\n\n\t\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = object.name;\n\n\t\t\t\t\tcontainer.add( mesh );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\t\tvar material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\tvar buffergeometry = new BufferGeometry();\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar points = new Points( buffergeometry, material );\n\t\t\t\t\tcontainer.add( points );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn container;\n\n\t\t}\n\n\t} );\n\n\treturn OBJLoader;\n\n} )();\n\nexport { OBJLoader };\n","import React, { Component } from \"react\";\nimport * as THREE from \"three\";\n\nimport { DDSLoader } from './gl/DDSLoader'; //'../node_modules/three/examples/jsm/loaders/DDSLoader';\nimport { MTLLoader } from './gl/MTLLoader';\nimport { OBJLoader } from './gl/OBJLoader';\n\nconst Background = () => {\n  const element = React.useRef(null);\n  const camera = React.useRef(null);\n  const renderer = React.useRef(null);\n  const object = React.useRef(null);\n  const scrollPosition = React.useRef(0);\n\n  function onWindowResize() {\n    camera.current.aspect = window.innerWidth / window.innerHeight;\n    camera.current.updateProjectionMatrix();\n    renderer.current.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  const listenToScroll = () => {\n    const position = window.pageYOffset;\n    scrollPosition.current = position;\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('scroll', listenToScroll, { passive: true })\n\n    var scene = new THREE.Scene();\n    camera.current = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    renderer.current = new THREE.WebGLRenderer({ alpha: true });\n    renderer.current.setSize(window.innerWidth, window.innerHeight);\n    element.current.appendChild(renderer.current.domElement);\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 1.1);\n    scene.add(ambientLight);\n\n    const pointLight = new THREE.PointLight(0xffffff, 0.005);\n    pointLight.position.z = 10;\n    camera.current.add(pointLight);\n    scene.add(camera.current);\n    camera.current.position.z = 5;\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      if (object.current) {\n        object.current.rotation.y += 0.006;\n        const ratio = 1 / document.body.scrollWidth * 7000;\n        object.current.position.z = (scrollPosition.current / document.body.scrollHeight * 4 * ratio) - ratio - 20;\n      }\n      renderer.current.render(scene, camera.current);\n    };\n    animate();\n\n    window.addEventListener('resize', onWindowResize);\n\n    const onProgress = function (xhr) {\n      if (xhr.lengthComputable) {\n        const percentComplete = xhr.loaded / xhr.total * 100;\n        console.log(Math.round(percentComplete, 2) + '% downloaded');\n      }\n    };\n\n    const onError = function () { };\n\n    const manager = new THREE.LoadingManager();\n    manager.addHandler(/\\.dds$/i, new DDSLoader());\n    new MTLLoader(manager)\n      .setPath(process.env.PUBLIC_URL + '/')\n      .load('myPc2.mtl', function (materials) {\n        materials.preload();\n        new OBJLoader(manager)\n          .setMaterials(materials)\n          .setPath(process.env.PUBLIC_URL + '/')\n          .load('myPc2.obj', function (obj) {\n            object.current = obj;\n            console.log(document.body.scrollWidth)\n            object.current.position.z = -1 / document.body.scrollWidth;\n            object.current.position.y = -5;\n            const newScale = 7;\n            object.current.scale.z = newScale;\n            object.current.scale.x = newScale;\n            object.current.scale.y = newScale;\n            scene.add(object.current);\n            renderer.current.render(scene, camera.current);\n          }, onProgress, onError);\n      });\n\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n      window.removeEventListener('scroll', listenToScroll);\n    };\n  }, []);\n\n  return (\n    <>\n      <div className=\"canvas-bg\" />\n      <div id=\"canvas\" ref={element} />\n    </>\n  )\n\n};\n\nexport default Background;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Background from './Background';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Background />\n      <header className=\"App-header\" >\n        <div className=\"app-wrapper\">\n          <h1>\n            Vaporwavez\n          </h1>\n          <p>Vaporwave producer</p>\n          <div className=\"links\">\n            <a target=\"blank\" href=\"https://open.spotify.com/artist/67AOfL6Oi8UZqpuGlw0mT3\">Spotify</a>\n            <a target=\"blank\" href=\"https://music.apple.com/us/artist/vaporwavez/1546276377\">Apple Music</a>\n            <a target=\"blank\" href=\"https://www.deezer.com/us/artist/117558422\">Deezer</a>\n            <a target=\"blank\" href=\"https://www.instagram.com/vaporwavez_music/\">Instagram</a>\n            <a target=\"blank\" href=\"https://twitter.com/vaporwavezmusic\">Twitter</a>\n            <a target=\"blank\" href=\"https://discord.gg/fF9zkuhP\">Discord</a>\n            <div>\n              aesthetic [at] vaporwave.com\n            </div>\n            <div className=\"playlist-wrapper\">\n              <iframe\n                src=\"https://open.spotify.com/embed/playlist/0HkJUicjusLn8P7BdS2P4N\"\n                width=\"100%\"\n                height=\"380\"\n                frameborder=\"0\"\n                allowtransparency=\"true\"\n                allow=\"encrypted-media\"\n              />\n            </div>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}